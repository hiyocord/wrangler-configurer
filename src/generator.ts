import fs from "node:fs";
import path from "node:path";
import type { Unstable_Config } from "wrangler";

const ENV_NAME = "VITE_WRANGLER_ARGS";
const COMMENT = `// This file is auto-generated by @hiyocord/wrangler-configurer
// Do not edit this file manually.
`;

const deepMerge = <T extends Record<string, any>>(base: T, override: T, pathTrace: string[] = []) => {
  const result: any = { ...base };

  const isUnset = (value: unknown) => {
    return value === undefined || value === null;
  }

  for (const [key, value] of Object.entries(override)) {
    const baseValue = base[key];

    if (isUnset(value)) {
    	continue;
    } else if (isUnset(baseValue)) {
      result[key] = value;
      continue;
    } else if (typeof baseValue !== typeof value) {
      throw new TypeError();
    }

    if (typeof baseValue === "object" && !Array.isArray(baseValue)) {
      result[key] = deepMerge(baseValue, value, [...pathTrace, key]);
      continue;
    }
    result[key] = value;
  }

  return result;
}


export const generate = (params: Partial<Unstable_Config>) => {
  const envRaw = process.env[ENV_NAME];
  let envConfig: Partial<Unstable_Config> = {};

  if (envRaw) {
    envConfig = JSON.parse(envRaw);
  }

  const mergedConfig = deepMerge(params, envConfig);
  const content = COMMENT + JSON.stringify(mergedConfig, null, 2);

  const outPath = path.resolve(process.cwd(), "wrangler.jsonc");
  fs.writeFileSync(outPath, content, "utf-8");
}

